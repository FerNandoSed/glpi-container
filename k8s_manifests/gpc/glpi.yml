---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: glpi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: glpi
  template:
    metadata:
      labels:
        app: glpi
    spec:
      containers:
        - name: app
          image: 'ghcr.io/fernandosed/glpi-container:master'
          imagePullPolicy: Always
          command:
            - /root/entrypoint.sh
          envFrom:
            - secretRef:
                name: glpi-secrets
          env:
            - name: GLPI_DATA
              value: /glpi
            - name: MYSQL_HOST
              value: db
          ports:
            - containerPort: 9000
          volumeMounts:
            - mountPath: /glpi
              name: glpi-data
            - mountPath: /usr/local/etc/php-fpm.d/
              name: php-fpm-config
          resources:
            limits:
              cpu: '500m'
              memory: '512Mi'
            requests:
              cpu: '250m'
              memory: '256Mi'
        - name: web
          image: nginx:stable-alpine
          ports:
            - containerPort: 80
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 30
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 30
          volumeMounts:
            - mountPath: /etc/nginx/templates
              name: nginx-config
            - mountPath: /glpi
              name: glpi-data
          env:
            - name: GLPI_HOST
              value: 127.0.0.1
            - name: GLPI_DATA
              value: /glpi
      volumes:
        - name: glpi-data
          persistentVolumeClaim:
            claimName: glpi-data-pvc
        - name: nginx-config
          configMap:
            name: nginx-config-configmap
        - name: php-fpm-config
          configMap:
            name: php-fpm-config-configmap
      dnsConfig:
        options:
          - name: ndots
            value: "1"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: glpi-data-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  volumeName: glpi-data
  resources:
    requests:
      storage: 1G
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: glpi-data
spec:
  capacity:
    storage: 1G
  accessModes:
  - ReadWriteMany
  nfs:
    path: /nfs/glpi
    server: 10.20.248.2
---
kind: Service
apiVersion: v1
metadata:
  name: web
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: glpi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: glpi-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "20m"
    nginx.ingress.kubernetes.io/affinity: cookie
    # nginx.ingress.kubernetes.io/auth-type: basic
    # nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - fool'
spec:
  rules:
  - host: glpi.cobayops.xyz
    http:
      paths:
      - backend:
          service:
            name: web
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
